{"version":3,"sources":["components/navbar.component.js","components/exercises-list.component.js","components/edit-exercise.component.js","components/create-exercise.component.js","components/create-user.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Exercise","props","exercise","username","description","duration","date","substring","_id","href","onClick","deleteExercise","ExercisesList","bind","state","exercises","axios","get","then","response","setState","data","catch","error","console","log","id","delete","this","filter","el","map","currentexercise","key","exerciseList","EditExercise","onChangeUsername","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","Date","users","match","params","length","user","e","target","value","preventDefault","post","result","window","location","ref","required","onChange","type","selected","CreateExercises","CreateUser","App","path","exact","component","ExerciseList","CreateExercise","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17e05b9c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          ExcerTracker\n        </Link>\n        <div className=\"collpase navbar-collapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                Exercises\n              </Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/create\" className=\"nav-link\">\n                Create Exercise Log\n              </Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/user\" className=\"nav-link\">\n                Create User\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// functional react component\n// lack of state and life cycle methods\n// accept props and return JSX, use functional component\nconst Exercise = props => (\n  <tr>\n    <td>{props.exercise.username}</td>\n    <td>{props.exercise.description}</td>\n    <td>{props.exercise.duration}</td>\n    <td>{props.exercise.date.substring(0, 10)}</td>\n    <td>\n      <Link to={\"/edit/\" + props.exercise._id}>edit</Link> |{\" \"}\n      <a\n        href=\"#\"\n        onClick={() => {\n          props.deleteExercise(props.exercise._id);\n        }}\n      >\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\n// class component\nexport default class ExercisesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteExercise = this.deleteExercise.bind(this);\n\n    this.state = { exercises: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/exercises/\")\n      .then(response => {\n        this.setState({ exercises: response.data });\n      })\n      .catch(error => console.log(error));\n  }\n\n  deleteExercise(id) {\n    axios\n      .delete(\"http://localhost:5000/exercises/\" + id)\n      .then(response => console.log(response.data));\n\n    this.setState({\n      exercises: this.state.exercises.filter(el => el._id !== id)\n    });\n  }\n\n  exerciseList() {\n    return this.state.exercises.map(currentexercise => {\n      //this is a custom component, passing in three props\n      return (\n        <Exercise\n          exercise={currentexercise}\n          deleteExercise={this.deleteExercise}\n          key={currentexercise._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Logged Exercises</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Username</th>\n              <th>Description</th>\n              <th>Duration</th>\n              <th>Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.exerciseList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\n\nexport default class EditExercise extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // state is how to create variables in react\n    this.state = {\n      username: \"\",\n      description: \"\",\n      duration: 0,\n      date: new Date(),\n      users: []\n    };\n  }\n\n  // react life cycle method, called before anything is displayed\n  // kind of like ViewDidLoad\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/exercises/\" + this.props.match.params.id)\n      .then(response => {\n        this.setState({\n          username: response.data.username,\n          description: response.data.description,\n          duration: response.data.duration,\n          date: new Date(response.data.date)\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    axios.get(\"http://localhost:5000/users/\").then(response => {\n      console.log(response.data);\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username)\n        });\n      }\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    };\n\n    console.log(exercise);\n\n    axios\n      .post(\n        \"http://localhost:5000/exercises/update/\" + this.props.match.params.id,\n        exercise\n      )\n      .then(result => console.log(result.data));\n\n    //take user back to home page after submission\n    window.location = \"/\";\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Edit Exercise Log</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Username: </label>\n            <select\n              ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}\n            >\n              {this.state.users.map(function(user) {\n                return (\n                  <option key={user} value={user}>\n                    {user}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Description: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Duration (in minutes): </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={this.onChangeDuration}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <div>\n              <DatePicker\n                selected={this.state.date}\n                onChange={this.onChangeDate}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Finish Edit\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\n\nexport default class CreateExercises extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // state is how to create variables in react\n    this.state = {\n      username: \"\",\n      description: \"\",\n      duration: 0,\n      date: new Date(),\n      users: []\n    };\n  }\n\n  // react life cycle method, called before anything is displayed\n  // kind of like ViewDidLoad\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/users/\").then(response => {\n      console.log(response.data);\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username),\n          username: response.data[0].username\n        });\n      }\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    };\n\n    console.log(exercise);\n\n    axios\n      .post(\"http://localhost:5000/exercises/add\", exercise)\n      .then(result => console.log(result.data));\n\n    //take user back to home page after submission\n    window.location = \"/\";\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Create New Exercise Log</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Username: </label>\n            <select\n              ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}\n            >\n              {this.state.users.map(function(user) {\n                return (\n                  <option key={user} value={user}>\n                    {user}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Description: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Duration (in minutes): </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={this.onChangeDuration}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <div>\n              <DatePicker\n                selected={this.state.date}\n                onChange={this.onChangeDate}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create Exercise Log\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class CreateUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // state is how to create variables in react\n    this.state = {\n      username: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const user = {\n      username: this.state.username\n    };\n\n    console.log(user);\n\n    axios\n      .post(\"http://localhost:5000/users/add\", user)\n      .then(result => console.log(result.data));\n\n    this.setState({\n      username: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Create New User</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Username: </label>\n            <input\n              type=\"text\"\n              required={true}\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create User\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Navbar from \"./components/navbar.component\";\nimport ExerciseList from \"./components/exercises-list.component\";\nimport EditExercise from \"./components/edit-exercise.component\";\nimport CreateExercise from \"./components/create-exercise.component\";\nimport CreateUser from \"./components/create-user.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <br />\n        <Route path=\"/\" exact component={ExerciseList} />\n        <Route path=\"/edit/:id\" component={EditExercise} />\n        <Route path=\"/create\" component={CreateExercise} />\n        <Route path=\"/user\" component={CreateUser} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}